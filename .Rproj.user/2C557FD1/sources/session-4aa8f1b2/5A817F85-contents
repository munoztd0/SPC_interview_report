


```{r, Exercise_2_2}
# Create a mapping dictionary from the classification DataFrame
classification_map <- setNames(source$improved_water_source, source$drinking_water_source)

# Create a new column based on the new classification
data$drinking_water_classification <- classification_map[data$drinking_water_source]

```




```{r, Exercise_3_a}

# Filter the data to include only "Baseline" and "Endline" records
filtered_data <- subset(data, data_collection_round %in% c("Baseline", "End-line"))

# Display some rows to confirm the filtering
filtered_data[sample(nrow(filtered_data), 5), ]

# Create a DataFrame to analyze single-headed households and water source improvements
single_headed_analysis <- filtered_data %>%
  group_by(data_collection_round, single_headed_household, drinking_water_classification) %>%
  summarize(Count = n())

# Create a plot
ggplot(data = single_headed_analysis %>% filter(single_headed_household == "Yes"),
       aes(x = data_collection_round, y = Count, fill = drinking_water_classification)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Access to Improved Water Sources for Single-Headed Households: Baseline vs Endline",
       x = "Data Collection Round",
       y = "Count of Households") +
  viridis::scale_fill_viridis(discrete = TRUE) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "bottom",
        legend.title = element_blank(),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(size = 12),
        axis.text.y = element_text(size = 12),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank())


```

It appears that the number of single-headed households with access to improved water sources has increased from the baseline to the "End-line" round. 

This suggests that single-headed households did receive more improvements in access to better water sources.

```{r statsA}

# Create the contingency table from the filtered data
contingency_table_single_headed <- table(filtered_data$data_collection_round, filtered_data$drinking_water_classification)

# Perform the chi-square test
chi2_test_result_single_headed <- chisq.test(contingency_table_single_headed)

contingency_table_single_headed

# Print the p-value
print(paste("p-value:", chi2_test_result_single_headed$p.value))


```
### Comments

The chi-square test for independence yields a p-value of approximately 0.038.

#Since the p-value is less than 0.05, we can reject the null hypothesis and conclude that there is a statistically significant association between the data collection round (Baseline vs End-line) and access to improved water sources among single-headed households. In simpler terms, single-headed households did receive statistically significant improvements in access to better water sources from the Baseline to the End-line.


### Assumptions

The term "single-headed households" is understood to mean households with a single adult responsible for the family, although this was not explicitly defined in the data.
The data accurately represents the population, and there is no sampling bias.


## Question 3.b
```{r, Exercise_3_b}


#redo the analysis for diarrhea cases with the corrected filter
diarrhea_analysis_corrected <- filtered_data %>%
  group_by(data_collection_round, diarrhea_under_5, drinking_water_classification) %>%
  summarize(Count = n())

# Filter the DataFrame to include only households with Improved water sources
diarrhea_analysis_improved_corrected <- diarrhea_analysis_corrected %>%
  filter(drinking_water_classification == 'Improved water source')

# Create a plot for diarrhea cases
ggplot(data = diarrhea_analysis_improved_corrected,
       aes(x = data_collection_round, y = Count, fill = diarrhea_under_5)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Effect of Improved Water Sources on Diarrhea Cases in Children Under 5: Baseline vs End-line",
       x = "Data Collection Round",
       y = "Count of Households") +
  scale_fill_discrete(name = "Diarrhea under 5") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "bottom",
        legend.title = element_blank(),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(size = 12),
        axis.text.y = element_text(size = 12),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank())


```

The plot shows the count of households with improved water sources reporting cases of diarrhea in children under 5 during the baseline and "End-line" data collection rounds.

As observed, the number of households reporting cases of diarrhea in children under 5 has decreased from the baseline to the "End-line" when improved water sources are in use. This suggests that the improvements in water sources may have had a positive effect in reducing cases of diarrhea in children under 5.


```{r statsB}

# Create the contingency table from the filtered data
contingency_table_diarrhea <- table(filtered_data$data_collection_round, filtered_data$diarrhea_under_5)

# Perform the chi-square test
chi2_test_result <- chisq.test(contingency_table_diarrhea)

contingency_table_diarrhea

# Print the p-value
print(paste("p-value:", chi2_test_result$p.value))


```


The chi-square test for independence yields a p-value of approximately 0.0015


Since the p-value is much less than  0.05, we can reject the null hypothesis and conclude that there is a statistically significant association between the data collection round (Baseline vs End-line) and cases of diarrhea in children under 5 among households with improved water sources. In simpler terms, the improvements in water sources have had a statistically significant positive effect in reducing cases of diarrhea in children under 5.


### Assumptions

Cases of diarrhea are self-reported and therefore assume accurate reporting from the households.
The "improved water sources" are assumed to be the primary source of drinking water for the households, although this may not always be the case.
The data is assumed to be representative of the larger population.


## Conclusions

By complementing the statistical analysis with these visualizations, we get both a macro and micro-level understanding of the impact of the water improvement project. The graphs quickly convey the overall trend, while the statistical tests provide a measure of the significance of these observations.



# Load necessary libraries
library(ggplot2)

# Create a scatter plot
ggplot(data, aes(x = income, y = employed, color = sex)) +
  geom_point(alpha = 0.7) +
  labs(
    title = "Income vs. Employment by Gender",
    x = "Income",
    y = "Employment Status"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.title.x = element_text(size = 12),
    axis.title.y = element_text(size = 12)
  )
---
  title: "Ruritania Adult Population Analysis"
author: "David Munoz Tord"
date: "`r format(Sys.time(), '%B %d, %Y')`"
repro:
  packages:
  - tidyverse
- ggplot2
- plotly
- kableExtra
- viridis
data:
  dtf: data/data.csv
output:
  html_document:
  includes:
  code_folding: "hide"
toc: true
toc_float: false
number_sections: false
---
  
  ```{r setup, include=FALSE}
# Install and load required packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
  tidyverse,
  plotly,
  kableExtra,
  viridis,
  scales
)

# Setup options
options(width = 999)
theme_set(theme_minimal())

knitr::opts_chunk$set(
  echo = TRUE,
  message = FALSE,
  warning = FALSE,
  fig.align = "center",
  out.width = "100%"
)

# Read the data
data <- read.csv("data/data.csv", stringsAsFactors = FALSE)
```

## 1. Total Adult Population
```{r}
total_adults <- sum(data$fweight)
data.frame(
  Metric = "Total Adults", 
  Value = format(total_adults, big.mark = ",")
) %>%
  kbl() %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    position = "center"
  )
```

## 2. Gender Distribution
```{r}
gender_dist <- data %>%
  group_by(sex) %>%
  summarize(Population = sum(fweight)) %>%
  mutate(Percentage = round(Population / sum(Population) * 100, 2))

gender_dist %>%
  kbl(col.names = c("Gender", "Population", "Percentage (%)")) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    position = "center"
  )
```

## 3. Adults in Each Province
```{r}
province_dist <- data %>%
  group_by(province) %>%
  summarize(Population = sum(fweight)) %>%
  mutate(Percentage = round(Population / sum(Population) * 100, 2))

province_dist %>%
  kbl(col.names = c("Province", "Population", "Percentage (%)")) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    position = "center"
  )
```

## 4. Proportion of Employed Adults
```{r}
employment_rate <- data %>% 
  summarize(
    Employed = sum(fweight[employed == 1]),
    Total = sum(fweight)
  ) %>% 
  mutate(Proportion_Employed = round(Employed / Total * 100, 2))

data.frame(
  Metric = c("Employed Adults", "Total Adults", "Proportion Employed (%)"), 
  Value = c(
    format(employment_rate$Employed, big.mark = ","),
    format(employment_rate$Total, big.mark = ","),
    paste0(employment_rate$Proportion_Employed, "%")
  )
) %>%
  kbl() %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    position = "center"
  )
```

## 5. Mean Income by Gender and Province
```{r}
mean_income_data <- data %>%
  group_by(province, sex) %>%
  summarize(
    Mean_Income = mean(income, na.rm = TRUE),
    SE = sd(income, na.rm = TRUE) / sqrt(n())
  )

mean_income_data %>%
  kbl(col.names = c("Province", "Gender", "Mean Income", "Standard Error")) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    position = "center"
  )
```

## 6. Income Distribution by Employment Status and Gender
```{r}
ggplot(data, aes(x = sex, y = income, fill = interaction(employed, sex))) +
  geom_violin(alpha = 0.7, scale = "width", trim = FALSE) +
  geom_boxplot(width = 0.1, outlier.size = 0.5, alpha = 0.6) +
  scale_y_log10() +
  scale_fill_viridis_d() +
  labs(
    title = "Income Distribution by Employment Status and Gender",
    x = "Gender",
    y = "Income (Log Scale)"
  ) +
  facet_wrap(~ employed, labeller = labeller(employed = c(`0` = "Unemployed", `1` = "Employed"))) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.title = element_text(size = 12),
    strip.text = element_text(size = 12)
  )
```

## 7. Gini Coefficient
```{r}
# Calculate Gini Coefficient
gini_coefficient <- function(income, weights) {
  sorted_indices <- order(income)
  sorted_income <- income[sorted_indices]
  sorted_weights <- weights[sorted_indices]
  
  cum_weights <- cumsum(sorted_weights) / sum(sorted_weights)
  cum_income <- cumsum(sorted_income * sorted_weights) / sum(sorted_income * sorted_weights)
  
  gini <- 1 - sum((cum_income[-length(cum_income)] + cum_income[-1]) * diff(cum_weights))
  return(gini)
}

gini <- gini_coefficient(data$income, data$fweight)

# Output Gini Coefficient
data.frame(
  Metric = "Gini Coefficient",
  Value = round(gini, 3)
) %>%
  kbl() %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    position = "center"
  )
```

## 8. Confidence Interval for Female Mean Income
```{r}
# Filter data for females
female_data <- data %>% filter(sex == "Female")

# Calculate weighted mean and standard error
weighted_mean <- sum(female_data$income * female_data$fweight) / sum(female_data$fweight)
weighted_variance <- sum(((female_data$income - weighted_mean)^2) * female_data$fweight) / sum(female_data$fweight)
weighted_se <- sqrt(weighted_variance / nrow(female_data))

# 95% confidence interval
ci_lower <- weighted_mean - qnorm(0.975) * weighted_se
ci_upper <- weighted_mean + qnorm(0.975) * weighted_se

data.frame(
  Metric = c("Weighted Mean Income", "Lower 95% CI", "Upper 95% CI"),
  Value = c(
    round(weighted_mean, 2),
    round(ci_lower, 2),
    round(ci_upper, 2)
  )
) %>%
  kbl() %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    position = "center"
  )
```

## 9. Factors to Improve Confidence Interval
To improve the confidence interval:
  1. Increase the sample size to reduce variability.
2. Ensure accurate weighting to reflect the population.
3. Account for any missing or outlier data points.
4. Consider stratified sampling to improve representativeness across groups.
